version: "3.9"
services:
  db:
    image: postgres:13.3
    environment:
      - POSTGRES_DB=some_shop
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGUSER=postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    
  kafka:
    image: confluentinc/cp-kafka:5.3.1
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=LISTENER_DOCKER_INTERNAL
      - KAFKA_LOG4J_LOGGERS=kafka.authorizer.logger=INFO
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_DELETE_TOPIC_ENABLE=true
      - KAFKA_LOG4J_ROOT_LOGLEVEL=INFO
      - KAFKA_ADVERTISED_LISTENERS=LISTENER_DOCKER_INTERNAL://kafka:29091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
      - KAFKA_BROKER_ID=1
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
  
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    environment:
      - ZOOKEEPER_SERVER_ID=1
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    ports:
      - "2181:2181"

  init-kafka:
    image: confluentinc/cp-kafka:5.3.1
    depends_on:
      - kafka
    entrypoint: [ '/bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      kafka-topics --bootstrap-server kafka:29091 --list
      
      echo -e 'Creating kafka topics'
      kafka-topics --bootstrap-server kafka:29091 --create --topic someshop.stock-management.order-products-reservation-result-v1 --replication-factor 1 --partitions 1
      kafka-topics --bootstrap-server kafka:29091 --create --topic someshop.ordering.order-created-v1 --replication-factor 1 --partitions 1
      
      echo -e 'Successfully created the following topics:'
      kafka-topics --bootstrap-server kafka:29091 --list
      "